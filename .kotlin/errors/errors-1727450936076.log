kotlin version: 2.0.10
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/rysanek/StudioProjects/Hiring/common/common/src/main/java/io/github/rysanekrivera/common/composables/Composables.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:240)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:139)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN FUNCTION_FOR_DEFAULT_PARAMETER name:TitleText-CRs6-98$default visibility:public modality:FINAL <> (text:kotlin.String, bold:kotlin.Boolean, underline:kotlin.Boolean, strikeThrough:kotlin.Boolean, ellipsize:kotlin.Boolean, fontFamily:androidx.compose.ui.text.font.FontFamily?, color:androidx.compose.ui.graphics.Color, letterSpacing:androidx.compose.ui.unit.TextUnit, textAlign:androidx.compose.ui.text.style.TextAlign?, lineHeight:androidx.compose.ui.unit.TextUnit, softWrap:kotlin.Boolean, maxLines:kotlin.Int, minLines:kotlin.Int, onTextLayout:kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style:androidx.compose.ui.text.TextStyle?, $mask0:kotlin.Int, $handler:kotlin.Any?) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:text index:0 type:kotlin.String
  VALUE_PARAMETER name:bold index:1 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:underline index:2 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:strikeThrough index:3 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:ellipsize index:4 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:fontFamily index:5 type:androidx.compose.ui.text.font.FontFamily? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.text.font.FontFamily?
  VALUE_PARAMETER name:color index:6 type:androidx.compose.ui.graphics.Color [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.graphics.Color
  VALUE_PARAMETER name:letterSpacing index:7 type:androidx.compose.ui.unit.TextUnit [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.unit.TextUnit
  VALUE_PARAMETER name:textAlign index:8 type:androidx.compose.ui.text.style.TextAlign? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.text.style.TextAlign?
  VALUE_PARAMETER name:lineHeight index:9 type:androidx.compose.ui.unit.TextUnit [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.unit.TextUnit
  VALUE_PARAMETER name:softWrap index:10 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:maxLines index:11 type:kotlin.Int [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Int
  VALUE_PARAMETER name:minLines index:12 type:kotlin.Int [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Int
  VALUE_PARAMETER name:onTextLayout index:13 type:kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?
  VALUE_PARAMETER name:style index:14 type:androidx.compose.ui.text.TextStyle? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.text.TextStyle
  VALUE_PARAMETER MASK_FOR_DEFAULT_FUNCTION name:$mask0 index:15 type:kotlin.Int
  VALUE_PARAMETER METHOD_HANDLER_IN_DEFAULT_FUNCTION name:$handler index:16 type:kotlin.Any?
  BLOCK_BODY
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=2
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'bold: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=false
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=4
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'underline: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=false
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=8
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'strikeThrough: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=false
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=16
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'ellipsize: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=false
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=32
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'fontFamily: androidx.compose.ui.text.font.FontFamily? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Null type=kotlin.Nothing? value=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=64
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'color: androidx.compose.ui.graphics.Color [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CALL 'public final fun getColor-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.text.TextStyle' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
            $this: CALL 'public final fun <get-titleMedium> (): androidx.compose.ui.text.TextStyle declared in androidx.compose.material3.Typography' type=androidx.compose.ui.text.TextStyle origin=GET_PROPERTY
              $this: CALL 'public final fun <get-typography> (): androidx.compose.material3.Typography declared in androidx.compose.material3.MaterialTheme' type=androidx.compose.material3.Typography origin=GET_PROPERTY
                $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:androidx.compose.material3.MaterialTheme visibility:public [final,static]' type=androidx.compose.material3.MaterialTheme origin=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=128
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'letterSpacing: androidx.compose.ui.unit.TextUnit [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CALL 'public final fun getUnspecified-XSAIIZE (): androidx.compose.ui.unit.TextUnit declared in androidx.compose.ui.unit.TextUnit.Companion' type=androidx.compose.ui.unit.TextUnit origin=GET_PROPERTY
            $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.unit.TextUnit.Companion visibility:public [final,static]' type=androidx.compose.ui.unit.TextUnit.Companion origin=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=256
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'textAlign: androidx.compose.ui.text.style.TextAlign? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Null type=kotlin.Nothing? value=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=512
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'lineHeight: androidx.compose.ui.unit.TextUnit [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CALL 'public final fun getUnspecified-XSAIIZE (): androidx.compose.ui.unit.TextUnit declared in androidx.compose.ui.unit.TextUnit.Companion' type=androidx.compose.ui.unit.TextUnit origin=GET_PROPERTY
            $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.unit.TextUnit.Companion visibility:public [final,static]' type=androidx.compose.ui.unit.TextUnit.Companion origin=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=1024
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'softWrap: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=true
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=2048
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'maxLines: kotlin.Int [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Int type=kotlin.Int value=2147483647
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=4096
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'minLines: kotlin.Int [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Int type=kotlin.Int value=1
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=8192
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CONST Null type=kotlin.Nothing? value=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=16384
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'style: androidx.compose.ui.text.TextStyle? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Unit origin=EQ
          CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=androidx.compose.ui.text.TextStyle origin=GET_PROPERTY
            $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
              CALL 'public final fun <get-LocalTextStyle> (): androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> declared in androidx.compose.material3.TextKt' type=androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> origin=GET_PROPERTY
    RETURN type=kotlin.Nothing from='public final fun TitleText-CRs6-98$default (text: kotlin.String, bold: kotlin.Boolean, underline: kotlin.Boolean, strikeThrough: kotlin.Boolean, ellipsize: kotlin.Boolean, fontFamily: androidx.compose.ui.text.font.FontFamily?, color: androidx.compose.ui.graphics.Color, letterSpacing: androidx.compose.ui.unit.TextUnit, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in io.github.rysanekrivera.common.composables.ComposablesKt'
      CALL 'public final fun TitleText-CRs6-98 (text: kotlin.String, bold: kotlin.Boolean, underline: kotlin.Boolean, strikeThrough: kotlin.Boolean, ellipsize: kotlin.Boolean, fontFamily: androidx.compose.ui.text.font.FontFamily?, color: androidx.compose.ui.graphics.Color, letterSpacing: androidx.compose.ui.unit.TextUnit, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle): kotlin.Unit declared in io.github.rysanekrivera.common.composables.ComposablesKt' type=kotlin.Unit origin=DEFAULT_STUB_CALL_TO_IMPLEMENTATION
        text: GET_VAR 'text: kotlin.String declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.String origin=null
        bold: GET_VAR 'bold: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Boolean origin=null
        underline: GET_VAR 'underline: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Boolean origin=null
        strikeThrough: GET_VAR 'strikeThrough: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Boolean origin=null
        ellipsize: GET_VAR 'ellipsize: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Boolean origin=null
        fontFamily: GET_VAR 'fontFamily: androidx.compose.ui.text.font.FontFamily? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=androidx.compose.ui.text.font.FontFamily? origin=null
        color: GET_VAR 'color: androidx.compose.ui.graphics.Color [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=androidx.compose.ui.graphics.Color origin=null
        letterSpacing: GET_VAR 'letterSpacing: androidx.compose.ui.unit.TextUnit [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=androidx.compose.ui.unit.TextUnit origin=null
        textAlign: GET_VAR 'textAlign: androidx.compose.ui.text.style.TextAlign? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=androidx.compose.ui.text.style.TextAlign? origin=null
        lineHeight: GET_VAR 'lineHeight: androidx.compose.ui.unit.TextUnit [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=androidx.compose.ui.unit.TextUnit origin=null
        softWrap: GET_VAR 'softWrap: kotlin.Boolean [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Boolean origin=null
        maxLines: GET_VAR 'maxLines: kotlin.Int [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
        minLines: GET_VAR 'minLines: kotlin.Int [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Int origin=null
        onTextLayout: GET_VAR 'onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=null
        style: TYPE_OP type=androidx.compose.ui.text.TextStyle origin=IMPLICIT_CAST typeOperand=androidx.compose.ui.text.TextStyle
          GET_VAR 'style: androidx.compose.ui.text.TextStyle? [assignable] declared in io.github.rysanekrivera.common.composables.ComposablesKt.TitleText-CRs6-98$default' type=androidx.compose.ui.text.TextStyle? origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=androidx.compose.ui.text.TextStyle origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:929)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrSetValue.accept(IrSetValue.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:1095)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 54 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 72 more


